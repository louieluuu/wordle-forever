name: Build and Deploy to S3 and Cloudfront
on:
  push:
    branches: [main]

# Set env variables by accessing secrets set in the Github repo.
env:
  AWS_S3_URL: ${{ secrets.AWS_S3_URL }}
  AWS_CLOUDFRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID }}
  AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

# Set the working directory to the client folder (which is where
# we run build and deploy commands).
defaults:
  run:
    working-directory: ./client

# Github OIDC (OpenID Connect) requires these permissions.
# Obviates the need for manual AWS credential authentication by
# creating a JWT (JSON Web Token) instead.
permissions:
  id-token: write
  contents: read

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest

    steps:
      # Brings source code from Github repo into the Ubuntu container.
      - name: Checkout
        uses: actions/checkout@v3

      - name: Print Working Directory
        run: echo $GITHUB_WORKSPACE/client

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      # pnpm's equivalent of npm ci; clean install, but uses pnpm-lock.yaml instead of package-lock.json
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Build Project
        run: pnpm run build

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Configure AWS credentials via Github OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com.cn
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{env.AWS_REGION}}

      - name: Update S3 bucket
        run: |
          aws s3 sync . --delete dist/ ${{env.AWS_S3_URL}}

      - name: Update Cloudfront cache
        run: |
          aws cloudfront create-invalidation 
          --distribution-id ${{env.AWS_CLOUDFRONT_ID}} 
          --paths "/*",
